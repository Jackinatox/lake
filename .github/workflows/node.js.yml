# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      NEXT_PUBLIC_PTERODACTYL_URL: ${{secrets.NEXT_PUBLIC_PTERODACTYL_URL}}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}}

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - name: generate Prisma Client
      run: npx prisma generate
    - name: Set Secrets
      run: | # Secrets needed on the server
        echo "AUTH_SECRET=${{secrets.AUTH_SECRET}}" >> .env
        echo "AUTH_REDIRECT_PROXY_URL=${{secrets.AUTH_REDIRECT_PROXY_URL}}" >> .env
        echo "NEXTAUTH_URL=${{secrets.NEXTAUTH_URL}}" >> .env
        echo "AUTH_DISCORD_ID=${{secrets.AUTH_DISCORD_ID}}" >> .env
        echo "AUTH_DISCORD_SECRET=${{secrets.AUTH_DISCORD_SECRET}}" >> .env
        echo "DATABASE_URL=${{secrets.DATABASE_URL}}" >> .env
        echo "webhookSecret=${{secrets.webhookSecret}}" >> .env
        echo "PTERODACTYL_API_KEY=${{secrets.PTERODACTYL_API_KEY}}" >> .env
        echo "STRIPE_SECRET_KEY=${{secrets.STRIPE_SECRET_KEY}}" >> .env
    - run: npm run build --if-present
    - run: npm test
